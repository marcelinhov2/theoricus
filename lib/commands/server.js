// Generated by CoffeeScript 1.6.3
(function() {
  var Destroyer, Generator, REPL, Server, fork, path, polvo,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  path = require('path');

  fork = require('child_process').fork;

  polvo = require('polvo');

  Generator = require('../commands/generator');

  Destroyer = require('../commands/destroyer');

  REPL = require('../repl/repl');

  module.exports = Server = (function() {
    Server.prototype.polvo = null;

    Server.prototype.repl = null;

    function Server(the, options) {
      var _this = this;
      this.the = the;
      this.err = __bind(this.err, this);
      this.out = __bind(this.out, this);
      if (!this.the.is_theoricus_app()) {
        return;
      }
      process.on('exit', function() {
        return _this.polvo.close();
      });
      this.create_repl();
      this.fork_polvo();
      process.on('SIGTERM', function() {
        this.polvo.close();
        return process.exit();
      });
    }

    Server.prototype.create_repl = function() {
      var _this = this;
      this.repl = new REPL;
      this.repl.on('generate', function(type, name) {
        return new Generator(_this.the, null, type, name, _this.repl);
      });
      return this.repl.on('destroy', function(type, name, options) {
        return new Destroyer(_this.the, null, type, name, options, _this.repl);
      });
    };

    Server.prototype.fork_polvo = function() {
      var options;
      options = {
        watch: true,
        server: true,
        base: this.the.app_root
      };
      return this.polvo = polvo(options, {
        out: this.out,
        err: this.err
      });
    };

    Server.prototype.out = function(msg) {
      this.repl.log(msg);
      if (msg.stripColors.charAt(0) === 'â™«') {
        return this.repl.start();
      }
    };

    Server.prototype.err = function(msg) {
      return this.repl.error(msg);
    };

    return Server;

  })();

}).call(this);

/*
//@ sourceMappingURL=server.map
*/

// Generated by CoffeeScript 1.6.3
(function() {
  var Index, fork, polvo;

  polvo = require('polvo');

  fork = (require('child_process')).fork;

  module.exports = Index = (function() {
    function Index(the, cli) {
      var options,
        _this = this;
      this.the = the;
      this.cli = cli;
      options = {
        compile: true,
        server: true,
        base: this.the.app_root
      };
      this.polvo = polvo(options, {
        out: function(msg) {
          console.log(msg);
          if (msg.stripColors.charAt(0) === 'â™«') {
            return _this.start_snapshooter();
          }
        }
      });
      process.on('exit', function() {
        _this.polvo.close();
        return _this.snapshooter.kill();
      });
    }

    Index.prototype.start_snapshooter = function() {
      var o, opts, output, snapshooter_path, url, _ref;
      console.log('Start indexing pages..'.magenta);
      snapshooter_path = path.join(this.the.root, 'node_modules', 'snapshooter');
      snapshooter_path = path.join(snapshooter_path, 'bin', 'snapshooter');
      output = (o = this.cli.argv.index === true) ? 'public_indexed' : o;
      url = (_ref = this.cli.argv.url) != null ? _ref : 'localhost:' + polvo.read_config().server.port;
      opts = ['-i', url, '-o', output];
      if (this.cli.argv.snapshooter != null) {
        opts = opts.concat([].concat(this.cli.argv.snapshooter.split(' ')));
      }
      this.snapshooter = fork(snapshooter_path, opts, {
        cwd: this.the.app_root
      });
      return this.snapshooter.on('exit', function() {
        return process.exit();
      });
    };

    return Index;

  })();

}).call(this);

/*
//@ sourceMappingURL=index.map
*/
